gamTwS = gam(FeHoursProp ~ Season, data = GroupedDayF, family = tw, method = "REML")
summary(gamTwS)
#Better GAM plots
#pattern only
viz = getViz(gamTw)
print(plot(viz,allTerms=T),pages=1)
#first way to plot GAM
vizGG = plot(viz,allTerms = T) +
labs(title = 'Social Units (GAM)', x = 'Day of Year')+
l_fitLine(linetype = 1, size = 2)  +
l_fitContour()+
#l_ciLine(mul = 5, colour = "blue", linetype = 2) +
l_ciPoly(level = 0.95, alpha = 1/2)+
l_ciBar() +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"))
theme_get()
print(vizGG,pages =1)
fig6 =paste("G:/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",site,'/',site,"GAM1_SocialUnits.png",sep="")
ggsave(fig6)
#second way to plot GAM
vizGG2 = plot(viz, allTerms = T) +
l_fitLine(colour = "red") + l_rug(mapping = aes(x=x,y=y), alpha=0.8) +
labs(title = 'Social Units (GAM)')+
l_ciLine(mul = 5, colour = "blue", linetype = 2)+
#l_points(shape = 19, size = 1, alpha = 0.1) +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"))+
theme_classic()
print(vizGG2,pages =1)
fig7 =paste("G:/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",site,'/',site,"GAM2_SocialUnits.png",sep="")
ggsave(fig7)
}
#Juveniles#
#GAMs with appropiate ITS binning
#GAM to identify seasonal pattern
gamTw = gam(JuHoursProp ~ s(day, bs = 'cc', k = 47), data = GroupedDayJ, family = tw, method = "REML")
plot(gamTw, pages =1)
summary(gamTw)
#GAM to check for significance between seasons
gamTwS = gam(JuHoursProp ~ Season, data = GroupedDayJ, family = tw, method = "REML")
summary(gamTwS)
#Better GAM plots
#pattern only
viz = getViz(gamTw)
print(plot(viz,allTerms=T),pages=1)
#first way to plot GAM
vizGG = plot(viz,allTerms = T) +
l_points() +
labs(title = 'Mid-Size (GAM)')+
l_fitLine(linetype = 3)  +
l_fitContour()+
l_ciLine(mul = 5, colour = "blue", linetype = 2) +
l_ciBar() +
l_points(shape = 19, size = 1, alpha = 0.1) +
l_rug() +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"))
print(vizGG,pages =1)
fig6 =paste("G:/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",site,'/',site,"GAM1_Juveniles.png",sep="")
ggsave(fig6)
#second way to plot GAM
vizGG2 = plot(viz, allTerms = T) +
l_fitLine(colour = "red") + l_rug(mapping = aes(x=x,y=y), alpha=0.8) +
labs(title = 'Mid-Size (GAM)')+
l_ciLine(mul = 5, colour = "blue", linetype = 2)+
l_points(shape = 19, size = 1, alpha = 0.1) +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"))+
theme_classic()
print(vizGG2,pages =1)
fig7 =paste("G:/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",site,'/',site,"GAM2_Juveniles.png",sep="")
ggsave(fig7)
#Males#
#GAMs with appropiate ITS binning
#GAM to identify seasonal pattern
gamTw = gam(MaHoursProp ~ s(day, bs = 'cc', k = 35), data = GroupedDayM, family = tw, method = "REML")
plot(gamTw, pages =1)
summary(gamTw)
#GAM to check for significance between seasons
gamTwS = gam(MaHoursProp ~ Season, data = GroupedDayM, family = tw, method = "REML")
summary(gamTwS)
#Better GAM plots
#pattern only
viz = getViz(gamTw)
print(plot(viz,allTerms=T),pages=1)
#first way to plot GAM
vizGG = plot(viz,allTerms = T) +
labs(title = 'Males (GAM)', x = 'Day of Year')+
l_fitLine(linetype = 1, size = 2)  +
l_fitContour()+
#l_ciLine(mul = 5, colour = "blue", linetype = 2) +
l_ciPoly(level = 0.95, alpha = 1/2)+
l_ciBar() +
theme(axis.text=element_text(size=18),
axis.title=element_text(size=20,face="bold"))
theme_get()
fig6 =paste("G:/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",site,'/',site,"GAM1_Males.png",sep="")
ggsave(fig6)
#second way to plot GAM
vizGG2 = plot(viz, allTerms = T) +
l_fitLine(colour = "red") + l_rug(mapping = aes(x=x,y=y), alpha=0.8) +
labs(title = 'Males (GAM)')+
l_ciLine(mul = 5, colour = "blue", linetype = 2)+
l_points(shape = 19, size = 1, alpha = 0.1) + theme_classic()
print(vizGG2,pages =1)
fig7 =paste("G:/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",site,'/',site,"GAM2_Males.png",sep="")
ggsave(fig7)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0,-119.4, 34.1  -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0,-119.4, 34.1  -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
knitr::opts_chunk$set(echo = TRUE)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-70.2 43.5, -69.8 43.5, -69.8 43.9, -70.2 43.9, -70.2 43.5)) ")
#loading robis
installed <- rownames(installed.packages())
if ( !("robis" %in% installed) ){
if ( !("remotes" %in% installed) )install.packages("remotes")
remotes::install_github("iobis/robis")
}
#load libraries
library(robis)
library('ggplot2')
library("rnaturalearth")
library("rnaturalearthdata")
library(roperators)
library(dplyr)
library(dggridR)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-70.2 43.5, -69.8 43.5, -69.8 43.9, -70.2 43.9, -70.2 43.5)) ")
#loading robis
installed <- rownames(installed.packages())
if ( !("robis" %in% installed) ){
if ( !("remotes" %in% installed) )install.packages("remotes")
remotes::install_github("iobis/robis")
}
#load libraries
library(robis)
library('ggplot2')
library("rnaturalearth")
library("rnaturalearthdata")
library(roperators)
library(dplyr)
library(dggridR)
#loading robis
installed <- rownames(installed.packages())
if ( !("robis" %in% installed) ){
if ( !("remotes" %in% installed) )install.packages("remotes")
remotes::install_github("iobis/robis")
}
#load libraries
library(robis)
library('ggplot2')
library("rnaturalearth")
library("rnaturalearthdata")
library(roperators)
library(dplyr)
library(magrittr)
library(vegan)
library(dggridR)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0,-119.4, 34.1  -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
#loading robis
installed <- rownames(installed.packages())
if ( !("robis" %in% installed) ){
if ( !("remotes" %in% installed) )install.packages("remotes")
remotes::install_github("iobis/robis")
}
#load libraries
library(robis)
library('ggplot2')
library("rnaturalearth")
library("rnaturalearthdata")
library(roperators)
library(dplyr)
library(dggridR)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-70.2 43.5, -69.8 43.5, -69.8 43.9, -70.2 43.9, -70.2 43.5)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0,-119.4, 34.1  -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0 -119.4, 34.1  -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0 -119.4, 34.1  -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0 -119.4, 34.1 -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.4 34.0, -119.4 34.1, -119.4 34.1, -119.4 34,
-119.4 34.0)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.4 34.0, -119.4 34.1, -119.4 34.1, -119.4 34, -119.4 34.0)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0 -119.4, 34.1 -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0 -119.4, 34.1 -119.4, 34.1 -119.4, 34 -119.4, 34.0 -119.4)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.4 34.0, -119.4 34.1, -119.4 34.1, -119.4 34.0, -119.4 34.0)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.4 34.0, -119.4 34.1, -119.4 34.1, -119.4 34.0, -119.4 34.0))")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.0, -119.36 34.01))")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-120.58357239 34.20654297, -118.90743256 33.36573029))")
occurence("Pterois volitans")
ptevol <- occurrence("Pterois volitans")
View(ptevol)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0 -119.41, 34.08 -119.41, 34.08 -119.36, 34.0 -119.36, 34.01 -119.36)) ")
(geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.0, -119.36 34.01))")
geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.0, -119.36 34.01))
""
""
geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.0, -119.36 34.01))"
view(geometry)
View(geometry)
#loading robis
installed <- rownames(installed.packages())
if ( !("robis" %in% installed) ){
if ( !("remotes" %in% installed) )install.packages("remotes")
remotes::install_github("iobis/robis")
}
#load libraries
library(robis)
library('ggplot2')
library("rnaturalearth")
library("rnaturalearthdata")
library(roperators)
library(dplyr)
library(magrittr)
library(vegan)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((34.0 -119.41, 34.08 -119.41, 34.08 -119.36, 34.0 -119.36, 34.01 -119.36)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.0, -119.36 34.01))")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-120.58357239 34.20654297, -118.90743256 33.36573029))")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-70.2 43.5, -69.8 43.5, -69.8 43.9, -70.2 43.9, -70.2 43.5)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.0, -119.36 34.01)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-120.58357239 34.20654297, -118.90743256 33.36573029)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.0)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.41 34.006, -119.41 34.08, -119.36 34.08, -119.36 34.006, -119.36 34.01)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.006, -119.41 34.0)) ")
View(SpeciesOccurence)
View(SpeciesOccurece)
View(SpeciesOccurence)
leafletmap(SpeciesOccurence)
install.packages("leaflet")
library(leafletmap)
library(leaflet)
leafletmap(SpeciesOccurence)
leafletmap(SpeciesOccurence)
library(leaflet)
leafletmap(SpeciesOccurence)
leaflet(SpeciesOccurence)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-117.32 32.83, -117.34 32.83, -117.33 32.80, -117.32 32.80, -117.32 32.83)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-117.32 32.83, -117.34 32.83, -117.33 32.80, -117.32 32.80, -117.32 32.83, -117.32 32.83)) ")
#loading robis
installed <- rownames(installed.packages())
if ( !("robis" %in% installed) ){
if ( !("remotes" %in% installed) )install.packages("remotes")
remotes::install_github("iobis/robis")
}
#load libraries
library(robis)
library('ggplot2')
library("rnaturalearth")
library("rnaturalearthdata")
library(roperators)
library(dplyr)
library(magrittr)
library(vegan)
library(leaflet)
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-117.32 32.83, -117.34 32.83, -117.33 32.80, -117.32 32.80, -117.32 32.83, -117.32 32.83)) ")
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-117.32 32.83, -117.34 32.83, -117.33 32.80, -117.32 32.80, -117.32 32.83)) ")
#loading robis
installed <- rownames(installed.packages())
if ( !("robis" %in% installed) ){
if ( !("remotes" %in% installed) )install.packages("remotes")
remotes::install_github("iobis/robis")
}
#load libraries
library(robis)
library('ggplot2')
library("rnaturalearth")
library("rnaturalearthdata")
library(roperators)
library(dplyr)
library(magrittr)
library(vegan)
library(leaflet)
x = data.frame(lat = c("32°49.573", "32°47.945",  "32°47.945", "32°49.573", "32°49.573"),
lon = c("-117°19.000", "-117°20.528", "-117°20.068", "-117°19.000", "-117°19.000"))
x$lat = gsub('°', ' ', x$lat)
x$lon = gsub('°', ' ', x$lon)
#convert from decimalminute to decimal degree
x$latdec = measurements::conv_unit(x$lat, from = 'deg_dec_min', to = 'dec_deg')
install.packages("measurements")
library(measurements)
x = data.frame(lat = c("32°49.573", "32°47.945",  "32°47.945", "32°49.573", "32°49.573"),
lon = c("-117°19.000", "-117°20.528", "-117°20.068", "-117°19.000", "-117°19.000"))
x$lat = gsub('°', ' ', x$lat)
x$lon = gsub('°', ' ', x$lon)
#convert from decimalminute to decimal degree
x$latdec = measurements::conv_unit(x$lat, from = 'deg_dec_min', to = 'dec_deg')
x$londec = measurements::conv_unit(x$lon, from = 'deg_dec_min', to = 'dec_deg')
SpeciesOccurence <- occurrence(geometry = "POLYGON ((-119.41 34.0, -119.41 34.08, -119.36 34.08, -119.36 34.006, -119.41 34.0)) ")
# <- occurrence(geometry = "POLYGON ((-117.32 32.83, -117.34 32.83, -117.33 32.80, -117.32 32.80, -117.32 32.83)) ")
library(ncdf4)
library(httr)
library (naniar)
library(ggmap)
library(OpenStreetMap)
install.packages("OpenStreetMap")
PATH="${RTOOLS40_HOME}\usr\bin;${PATH}"
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
install.packages("OpenStreetMap")
Sys.which("make")
install.packages("OpenStreetMap")
install.packages("blackbox")
library(ncdf4)
library(httr)
library (naniar)
library(ggmap)
library(OpenStreetMap)
mean(r)
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(ncdf)
library(raster)
library("rnaturalearth")
library("rnaturalearthdata")
#load files
SST = nc_open("erdMH1sstdmdayR20190SQ_db9b_1c36_0a7f.nc")
names(SST$var)
v1=SST$var[[1]]
SSTvar=ncvar_get(SST,v1)
SST_lon=v1$dim[[1]]$vals
SST_lat=v1$dim[[2]]$vals
dates=as.POSIXlt(v1$dim[[3]]$vals,origin='1970-01-01',tz='GMT')
#loading the world
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
install.packages(c("dplyr", "httr", "ncdf4", "raster", "rnaturalearth", "rnaturalearthdata", "sf"))
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(ncdf)
library(raster)
library("rnaturalearth")
library("rnaturalearthdata")
#load files
SST = nc_open("erdMH1sstdmdayR20190SQ_db9b_1c36_0a7f.nc")
names(SST$var)
v1=SST$var[[1]]
SSTvar=ncvar_get(SST,v1)
SST_lon=v1$dim[[1]]$vals
SST_lat=v1$dim[[2]]$vals
dates=as.POSIXlt(v1$dim[[3]]$vals,origin='1970-01-01',tz='GMT')
#loading the world
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
setwd("~/GitHub/WAT_HabMod")
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(ncdf)
library(raster)
library("rnaturalearth")
library("rnaturalearthdata")
#load files
SST = nc_open("erdMH1sstdmdayR20190SQ_db9b_1c36_0a7f.nc")
names(SST$var)
v1=SST$var[[1]]
SSTvar=ncvar_get(SST,v1)
SST_lon=v1$dim[[1]]$vals
SST_lat=v1$dim[[2]]$vals
dates=as.POSIXlt(v1$dim[[3]]$vals,origin='1970-01-01',tz='GMT')
#loading the world
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(ncdf)
library(raster)
library("rnaturalearth")
library("rnaturalearthdata")
install.packages("rgeos")
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(raster)
library(rgeos)
library("rnaturalearth")
library("rnaturalearthdata")
#load files
SST = nc_open("erdMH1sstdmdayR20190SQ_db9b_1c36_0a7f.nc")
names(SST$var)
v1=SST$var[[1]]
SSTvar=ncvar_get(SST,v1)
SST_lon=v1$dim[[1]]$vals
SST_lat=v1$dim[[2]]$vals
dates=as.POSIXlt(v1$dim[[3]]$vals,origin='1970-01-01',tz='GMT')
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
points = rasterToPoints(r, spatial = TRUE)
df = data.frame(points)
names(df)[names(df)=="layer"]="SST"
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient(low="blue", high="red")
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(raster)
library(rgeos)
library(ggplot)
library("rnaturalearth")
library("rnaturalearthdata")
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(raster)
library(rgeos)
library(ggplot2)
library("rnaturalearth")
library("rnaturalearthdata")
install.packages("ggplot2")
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(raster)
library(rgeos)
library(ggplot2)
library("rnaturalearth")
library("rnaturalearthdata")
points = rasterToPoints(r, spatial = TRUE)
df = data.frame(points)
names(df)[names(df)=="layer"]="SST"
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient(low="blue", high="red")
library(ncdf4)
library(httr)
library(sf)
library(dplyr)
library(raster)
library(rgeos)
library(ggplot2)
library("rnaturalearth")
library("rnaturalearthdata")
#load files
SST = nc_open("erdMH1sstdmdayR20190SQ_db9b_1c36_0a7f.nc")
names(SST$var)
v1=SST$var[[1]]
SSTvar=ncvar_get(SST,v1)
SST_lon=v1$dim[[1]]$vals
SST_lat=v1$dim[[2]]$vals
dates=as.POSIXlt(v1$dim[[3]]$vals,origin='1970-01-01',tz='GMT')
#loading the world
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
points = rasterToPoints(r, spatial = TRUE)
df = data.frame(points)
names(df)[names(df)=="layer"]="SST"
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient(low="blue", high="red")
r = raster(t(SSTvar[,,1]),xmn = min(SST_lon),xmx = max(SST_lon),ymn=min(SST_lat),ymx=max(SST_lat))
points = rasterToPoints(r, spatial = TRUE)
df = data.frame(points)
names(df)[names(df)=="layer"]="SST"
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient(low="blue", high="red")
mid = mean(r)
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient(midpoint = mid, low="blue", mid = "yellow",high="red")
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient2(midpoint = mid, low="blue", mid = "yellow",high="red")
mid
r
View(r)
mid = mean(df$SST)
mid
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient2(midpoint = mid, low="blue", mid = "yellow",high="red")
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient2(midpoint = mid, low="dark blue", mid = "orange",high="red")
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient2(midpoint = mid, low="light blue", mid = "orange",high="red")
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient2(midpoint = mid, low="light blue", mid = "yellow",high="red")
ggplot(data=world) +  geom_sf()+coord_sf(xlim= c(-81,-65),ylim=c(31,43),expand=FALSE)+
geom_raster(data = df , aes(x = x, y = y, fill = SST)) +
ggtitle(paste("SST", dates[1]))+geom_point(x = -66.3, y = 41.1, color = "black",size=3)+
geom_point(x=-76, y=33.69, color = "green",size = 3)+xlab("Latitude")+ylab("Longitude")+
scale_fill_gradient2(midpoint = mid, low="blue", mid = "yellow",high="red")
